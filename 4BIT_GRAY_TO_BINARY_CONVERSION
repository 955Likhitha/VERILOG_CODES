module g_b(g,b);
    input [3:0] g;
    output [3:0] b;
    assign b[3]=g[3];
    assign b[2]=b[3]^g[2];
    assign b[1]=b[2]^g[1];
    assign b[0]=b[1]^g[0];
endmodule
//Testbench//
module g_b_tb();
 reg [3:0] t_g;
   wire [3:0] t_b;
   g_b dut(.g(t_g),.b(t_b));
   initial
   begin
   t_g=4'b0000;//t_g=4'd1
   #10 t_g=4'b0001;
    #10 t_g=4'b0010;
     #10 t_g=4'b0011; 
      #10 t_g=4'b0100;
       #10 t_g=4'b0101;
        #10 t_g=4'b0110;
         #10 t_g=4'b0111;
          #10 t_g=4'b1000;
           #10 t_g=4'b1001;//t_g=4'd9
            #10 t_g=4'b1010;
             #10 t_g=4'b1011;
              #10 t_g=4'b1100;
               #10 t_g=4'b1101;
                #10 t_g=4'b1110;
                 #10 t_g=4'b1111;
                 #10 $finish;
     
   end
endmodule
